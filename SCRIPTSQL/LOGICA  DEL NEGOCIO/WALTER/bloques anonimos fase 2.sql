/*para la creacion de un usuario en el sistema*/
   DECLARE
    USUARIO_N USUARIO%ROWTYPE;
    BEGIN
        USUARIO_N.NOMBRE_USUARIO:='PROYECTO';
        USUARIO_N.NOMBRES:='USUARIO 1';
        USUARIO_N.APELLIDOS:='PEREZ';
        USUARIO_N.DPI:='2433453126483';
        USUARIO_N.DIRECCION:='zona X';
        USUARIO_N.CORREO_ELECTRONICO:='Troman@hotmail.es';
        USUARIO_N.TELEFONO:='14537154';
        USUARIO_N.CELULAR:='';
        USUARIO_N.FECHA_NACIMIENTO:=TO_DATE('02/11/1995','dd/mm/yyyy');
        USUARIO_N.FOTOGRAFIA:=NULL;
        /*LOS CAMPOS COMO CONTRASEÑAS Y ESTADOS DE CUENTA AÚN NO SE HAN ENCRIPTADO
        PUES COMO ESTAMOS AÚN HACIENDO PRUEBAS DEBEMOS VALIDAR QUE ESTÉN HACIENDO BIEN LAS TRANSACCIONES
        AL FINAL, A LA ENTREGA DE L PROYECTO SE REALIZARÁ ESTE PASO*/
        USUARIO_N.CONTRASENA:='AJSDLFK';
        USUARIO_N.ID_AGENCIA:=1;
        USUARIO_N.ID_MUNICIPIO:=1;
        USUARIO_N.TIPO_USUARIO:=NULL;
        USUARIO_N.TIPO_GENERO:=2;
    /*PROBAMOS EL PROCEDIMIENTO ALMACENADO*/
    PROC_CREAR_USUARIO(USUARIO_N);
    END;
    /
commit;
set serveroutput on;
select * from usuario;
select * from bitacora_usuario;


    /*6.- FORMA DE MANDAR LOS DATOS PARA EL STORED PROCEDURE*/
    /*BLOQUE ANÒNIMO para crear un cliente*/

    DECLARE 
    CLIENTE_N CLIENTE%ROWTYPE;
    BEGIN
    CLIENTE_N.NOMBRES:='usuario random';
    CLIENTE_N.APELLIDOS:='XXXXXXXXXX';
    CLIENTE_N.DPI:='78456123';
    CLIENTE_N.NIT:='8659552-0';
    CLIENTE_N.MUNICIPIO:=1;
    CLIENTE_N.DIRECCION:='AV. EL CEMENTERIO 18-26 ZONA 3, GUATEMALA, GUATEMALA';
    CLIENTE_N.TELEFONO:='44533196';
    CLIENTE_N.CELULAR:='';
    CLIENTE_N.CORREO_ELECTRONICO:='walterej@hotmail.es';
    CLIENTE_N.TIPO_GENERO:=1;
    CLIENTE_N.FECHA_NACIMIENTO:=TO_DATE('20/11/1994','dd/mm/yyyy');
    CLIENTE_N.IMAGEN_FIRMA:=NULL;
    /*PROBAMOS EL PROCEDIMIENTO ALMACENADO*/
    PROC_CREAR_CLIENTE(CLIENTE_N);
    END;
    /
commit;
set serveroutput on;
    
select * from cliente;
select * from bitacora_cliente;



/*creacion de una empresa, tiene que exisi9tr el representante legal antes en la tabla cliente*/
/*6.- FORMA DE MANDAR LOS DATOS PARA EL STORED PROCEDURE*/
/*BLOQUE ANÒNIMO*/

DECLARE 
EMPRESA_N EMPRESA%ROWTYPE;
BEGIN
EMPRESA_N.ID_REPRESENTANTE_LEGAL:='1';
EMPRESA_N.NOMBRE:='EMPRESA 1';
EMPRESA_N.DIRECCION:='AV. EL CEMENTERIO 18-26 ZONA 3, GUATEMALA, GUATEMALA';
EMPRESA_N.NIT:='189168-0';
EMPRESA_N.TELEFONO:='1596548';
EMPRESA_N.CORREO:='empresa@google.com';
EMPRESA_N.ID_MUNICIPIO:=1;
/*PROBAMOS EL PROCEDIMIENTO ALMACENADO*/
PROC_CREAR_EMPRESA(EMPRESA_N);
END;
/




/*creacion y asociación de cuentas,
cuando se apertura uan cuenta, autom+aticamente se le asocia al cliente
unicamente vamos a asociar el cliente con otras cuentas cuando se requiera*/.

/*PROBANDO EL ORDEN PARA CREAR UNA CUENTA*/


/*1.- PRIMERO CREAMOS USUARIO DEL SISTEMA*/

/*2.- CREAMOS LA CANTIDAD DE CLIENTES O EMPRESAS QUE QUERAMOS*/



/*3 PROC_CREAR_CUENTA(TIPO_CUENTA NUMBER, DPI_CLIENTE VARCHAR2, NO_PATENTE VARCHAR2)*/
/*para crear cuentas*/

BEGIN
    PROC_CREAR_CUENTA(1,'78456123',NULL);
   
END;



/* 4.. para asociar cuentas
PROC_ASOCIAR_CLIENTEOEMPRESA(DPI_CLIENTE VARCHAR2, NO_CUENTA VARCHAR2,NUM_PATENTE VARCHAR2)
*/


BEGIN
PROC_ASOCIAR_CLIENTEOEMPRESA('26560901010','1-1-63-1','123456789');
END;



/*5. PARA CAMBIAR UN ASOCIADO DE CUENTA CON OTRO
PROC_ACTUALIZAR_ASOC_CUENTA(DPI_CLIENTE_NUEVO VARCHAR2, NO_CUENTA VARCHAR2,NUM_PATENTE VARCHAR2, DPI_CLIENTE_VIEJO VARCHAR2)
*/


BEGIN
    PROC_ACTUALIZAR_ASOC_CUENTA('265609010103','1-1-64-5',NULL,'265609010101');
END;



/**SET SERVEROUTPUT ON;
DECLARE
BEGIN
    CREAR_CHEQUERA('2-2-6-0');
    COMMIT;
END;*/

BEGIN
    CREAR_CHEQUERA('2-2-6-0');
    COMMIT;
END;


/* DEPOSITOS Y RETIROS*/

/*1.- CREAR LIBRETA PARA CUENTAS DE AHORRO*/
DECLARE
DATOS LIBRETA%ROWTYPE;

BEGIN
DATOS.ID_CUENTA:='1-2-41-1';
DATOS.ID_ESTATUS:=1;
pa_crear_libreta(DATOS);
END;











/*tipos de boleta*/
    /*1.- depositos a cuenta de ahorro*/
    /*2.- depositos a cuenta monetaria*/
    /*3.- retiro a cuenta de ahorro*/
    /*4.- RETIRO DE CUENTA MONETARIA (CHEQUE) */




/*pa para crear depositos y retiros*/
/*BLOQUE ANONIMO PARA CREAR LA BOLETA */

DECLARE
DATOS_BOLETA BOLETA%ROWTYPE;
BEGIN
DATOS_BOLETA.MONTO:=100;
DATOS_BOLETA.ID_CUENTA:='2-2-6-0';
DATOS_BOLETA.TIPO_BOLETA:=2;
PROC_CREAR_BOLETA(DATOS_BOLETA);
END;



/*REPORTE DIARIO DE ESTADO DE CUENTA DE UNA CUENTA VALGA LA REDUNDANCIA*/
BEGIN
REPORTE_ESTADO_CUENTA('1-2-41-1','29/04/2020');
END;




SELECT * FROM bitacora_transaccion order by no_transaccion asc;


SELECT * FROM LIBRETA;
SELECT * FROM CUENTA;
